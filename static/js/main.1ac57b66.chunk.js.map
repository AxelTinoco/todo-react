{"version":3,"sources":["components/AddTodoForm.js","hooks/useForm.js","components/Reducer/todoReducer.js","components/CompleteTodoList.js","components/AddToDo.js","helpers/getDate.js","App.js","index.js"],"names":["AddTodoForm","dispatch","show","stylesWidth","useSpring","from","width","to","background","config","gentle","reverse","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","form","style","className","onSubmit","e","preventDefault","length","newTodo","id","Date","getTime","desc","done","type","payload","placeholder","onChange","autoComplete","todoReducer","state","action","filter","todo","map","require","CompleteTodoList","todos","height","display","margin","autoplay","speed","mode","src","init","JSON","parse","localStorage","getItem","AddToDo","newDate","date","toLocaleDateString","weekday","dateNumber","getDate","hour","getHours","minutes","getMinutes","month","toLocaleString","year","getFullYear","useReducer","setShow","todoid","showViews","setShowViews","useEffect","setItem","stringify","handleShowViews","onClick","slice","li","handleToggle","htmlFor","handleDeleteTask","App","loop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ac57b66.chunk.js","sourcesContent":["import { useSpring, animated,config } from 'react-spring' //Spring\nimport {FcInspection} from 'react-icons/fc'\nimport { useForm } from '../hooks/useForm'\n\nconst AddTodoForm = ({dispatch,show}) => {\n\n\n   const stylesWidth = useSpring({\n    from: { width : \"80%\"},\n    to: {width: \"2%\"} ,\n    background: \"black\",\n    config: config.gentle,\n    reverse: show,\n  })\n\n  const [ {description} ,handleInputChange, reset] = useForm( {\n\n    description:''\n\n}  )\n\n\n    \n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n        if(description.length < 2 ){\n            return;\n        }\n\n\n        const newTodo = {\n            id: new Date().getTime(),\n            desc: description,\n            done: false\n        }\n\n        const action = {\n            type: 'add',\n            payload: newTodo\n        }\n\n        dispatch(action);\n        reset();\n\n    }\n\n\n\n\n    return (\n        <animated.form \n        style = {stylesWidth}\n        className=\"bg-blue-700 text-white flex justify-start items-center relative rounded-lg my-2\"\n        onSubmit={handleSubmit}\n        >\n        <FcInspection className='text-3xl absolute left-1'/>\n        <input \n            type=\"text\"\n            className='flex bg-black w-full p-2 pl-10 rounded-lg focus:ring-4 ring-blue-700 focus:outline-none'\n            placeholder='Agregar Tarea...'\n            onChange={handleInputChange}\n            value={description}\n            name=\"description\" \n            autoComplete=\"off\"\n            />\n        </animated.form>\n    )\n}\n\nexport default AddTodoForm\n","import { useState } from \"react\"\n\n\n\nexport const useForm = (initialState = {}) => {  \n  \n    const [values, setValues] = useState(initialState)\n\n    const reset = () => {\n        setValues(initialState)\n    }\n\n    const handleInputChange = ({target}) => {\n        \n        setValues({\n\n            ...values,\n            [target.name] : target.value\n\n        });\n    }\n\n\n    return [values,handleInputChange,reset]\n\n}\n","\n\n\n\nconst todoReducer = (state = [] ,action) => {\n  switch (action.type) {\n      case('add'):\n      return[...state,action.payload]\n\n      case('delete'):\n        return state.filter(todo => todo.id !== action.payload);\n\n      case('toggle'):\n        return state.map( todo =>\n          (todo.id === action.payload)\n          ? {...todo,done: !todo.done}\n          : todo\n          );\n  \n      default:\n          break;\n  }\n}\n\nexport default todoReducer\n","require(\"@lottiefiles/lottie-player\");\n\n\nconst CompleteTodoList = ({todos}) => {\n\n\n\n \n    return (\n        \n            <div className='w-full h-screen bg-blue-500 p-4 text-white z-10'>\n           <div className='flex flex-col'>\n\n            <h2 className='text-2xl text-white '>Tareas completadas</h2>\n\n           <ul className='list-none flex space-y-2 flex-col shadow-2xl w-[80%] mt-5'>\n             \n\n            {\n               todos && todos?.map(todo => (todo?.done === true ?  \n               <li className=\"p-2 flex border w-[100%] text-blue-400 items-center justify-items-end bg-green-100\"\n                key={todo?.id}>{todo?.desc}\n                <div className='flex justify-around'>\n        <lottie-player\n        className='flex'\n        style={{ width: '20%' , height:'20%', display:'flex',margin :'0'}}\n        autoplay\n        speed='1'\n        mode=\"normal\"\n        src=\"https://assets6.lottiefiles.com/packages/lf20_pwjpnzxa.json\"\n        />\n        \n        </div>\n                \n                </li> : null))\n            }\n            \n\n           </ul>\n\n\n           </div>\n          \n          \n        </div>\n        \n    )\n}\n\nexport default CompleteTodoList\n","import { animated } from 'react-spring' //Spring\nimport React, {useEffect, useReducer, useState } from 'react';\nimport { FcGoogle, FcCalendar } from 'react-icons/fc'\nimport { GoPlus } from 'react-icons/go'\nimport { getDate } from '../helpers/getDate';\nimport AddTodoForm from './AddTodoForm';\nimport todoReducer from './Reducer/todoReducer';\nimport CompleteTodoList from './CompleteTodoList';\n\n\n\n\nconst init = () => {\n    return JSON.parse(localStorage.getItem('todos')) || []\n}\n\n\n\nconst AddToDo = () => {\n\n    const { year, month, date, dateNumber } = getDate();\n\n    const [todos, dispatch] = useReducer(todoReducer, [], init)\n\n    const [show, setShow] = useState(false); // Estado del boton de activado y desactivado.\n\n    const [todoid] = useState('')\n\n    const initialState = 1\n\n    const [showViews, setShowViews] = useState(initialState);\n   \n  \n\n\n    const handleAddInput = (e) => {\n        setShow(!show)\n    }\n\n    useEffect(() => {\n\n        localStorage.setItem('todos', JSON.stringify(todos))\n\n    }, [todos])\n\n    const handleDeleteTask = (todoid) => {\n\n        const action = {\n            type: 'delete',\n            payload: todoid\n        }\n\n        dispatch(action)\n\n    }\n\n    const handleToggle = (todoid) => {\n\n        dispatch({\n            type: 'toggle',\n            payload: todoid\n        });\n\n    }\n\n    const handleShowViews = ({target}) => {\n        \n    switch (target.id) {\n        case 'todo':\n           return setShowViews(initialState)\n            \n        case 'complete':\n           return setShowViews(3)\n            \n        default:\n            return setShowViews(initialState);\n    }\n    }\n\n\n\n\n\n    return (\n\n        <div className='flex flex-row h-screen w-full'>\n\n            <div className='w-1/5 bg-[#3c4f76] flex flex-col place-items-end'>\n                \n                <button\n                id=\"todo\" \n                className={`w-full h-1/3 rounded-l-3xl md:w-1/2 bg-white`}\n                onClick={handleShowViews}\n                 >\n                <div className='transform -rotate-90'>ToDo</div>\n                </button>\n\n                {/* <button\n                id=\"delete\" \n                className={`w-full h-1/3 rounded-l-3xl md:w-1/2 bg-red-500`}\n                onClick={handleShowViews}\n                 >\n                <div className='transform -rotate-90'>Delete</div>\n                </button> */}\n\n                <button\n                id=\"complete\" \n                className={`w-full h-1/3 rounded-l-3xl md:w-1/2 bg-blue-500`}\n                onClick={handleShowViews}\n                 >\n                <div className='transform -rotate-90'>Complete</div>\n                </button>\n                \n\n\n            </div>\n\n            <div className='flex flex-col h-screen w-full'>\n\n                <div className=' w-full'>\n\n\n                    {\n                        showViews && showViews === 3 ? <CompleteTodoList todos= {todos}/> : null\n                    }\n\n\n\n                </div>\n\n\n\n                <div className='flex flex-row p-4 text-3xl space-x-3 justify-end w-full'>\n                    <FcGoogle />\n                    <FcCalendar />\n                </div>\n\n                <div className='flex flex-col w-full p-4'>\n\n                    {/* <h2 className='capitalize'>{getDate().month.slice(0,3)}.{getDate().year}</h2> */}\n                    <h2 className='capitalize text-2xl'>{month.slice(0, 3)}.{year}</h2>\n                    <h2 className='capitalize text-5xl'>{date.slice(0, 3)}.{dateNumber}</h2>\n                </div>\n\n\n                <div className='flex pl-2'>\n\n\n                    {\n                        show && <AddTodoForm show={show} dispatch={dispatch} todoid={todoid} />\n                    }\n\n\n\n                </div>\n\n\n                <div className='flex max-h-full overflow-scroll overflow-x-hidden w-full pl-2 p-1'>\n                    {\n                        <ul className='list-none flex space-y-2  flex-col shadow-2xl w-full'>\n                            {\n                                todos.map(todo => (\n                                    <animated.li\n                                        key={todo.id}\n                                        className=\"p-2 flex border w-full items-center justify-items-end relative\"\n                                    >\n                                        <input type=\"checkbox\" name=\"\" id={todo.id} className='mr-2' onClick={() => handleToggle(todo.id)} />\n                                        <label htmlFor={todo.id}>{todo.desc}</label>\n                                        <button\n                                            className='bg-red-500 text-white p-2 absolute right-4 hover:bg-[#0077b6]'\n                                            onClick={() => handleDeleteTask(todo.id)}\n                                        >\n                                            Borrar\n                                        </button>\n                                    </animated.li>\n                                ))\n                            }\n                        </ul>\n                    }\n                </div>\n\n                <button className='bg-[#4361ee] absolute text-white rounded-full w-14 h-14\n       bottom-5 right-5 flex items-center justify-center text-xl '\n                    onClick={handleAddInput}\n                >\n                    <GoPlus />\n                </button>\n\n\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default AddToDo\n","export const getDate = () => {    //Poner en un helpers para mejro uso y lectura de codigo\n\n    const newDate = new Date();\n    const date = newDate.toLocaleDateString('default', { weekday: 'long' });;\n    const dateNumber = newDate.getDate();\n    const hour = newDate.getHours();\n    const minutes = newDate.getMinutes();\n    const month = newDate.toLocaleString('default', { month: 'long' });\n    const year = newDate.getFullYear();\n\n    \n    \n        const dateOrganized = {\n            date,\n            hour,\n            minutes,\n            month,\n            year,\n            dateNumber\n        }\n    \n      return(dateOrganized)\n    }","import AddToDo from './components/AddToDo';\nimport './index.css';\nrequire(\"@lottiefiles/lottie-player\");\n\n\n\n\n\n\nfunction App() {\n\n  \n\n  return (\n  <div className='grid grid-cols-12 grid-rows-6 h-screen w-screen'>\n      \n      <div className='hidden md:grid md:col-start-1 md:col-end-7 bg-mountain bg-cover h-screen bg-center'>\n      <span className='m-0 p-0 absolute'>App v.0.5. Beta</span>\n        <div className=' backdrop-filter backdrop-blur-[2px] \n        w-4/5 place-self-center h-4/5 text-center rounded-3xl \n        border border-white p-4 shadow-2xl h-contain'>\n          <h2 className='text-6xl bg-clip-text text-transparent bg-gradient-to-r from-gray-500 to-blue-500'>ToDo App</h2>\n          <ul className='text-left p-8 text-3xl space-y-4 list-disc text-white '>\n            <li>Crear Tareas</li>\n            <li>Eliminar Tareas</li>\n            <li>Persistencia de Datos</li>\n            <li>React,TailwindCSS & React Spring</li>\n          </ul>\n\n        <div className='w-full flex justify-center'>\n        <lottie-player\n        className='flex'\n        style={{ width: '40%' , height:'40%', display:'flex',margin :'0'}}\n        autoplay\n        loop\n        speed='1'\n        mode=\"normal\"\n        src=\"https://assets9.lottiefiles.com/packages/lf20_exsezj76.json\"\n        />\n        </div>\n\n                        \n\n        </div>\n\n      </div>\n\n      <div className='col-start-1 col-span-12  md:col-start-7 md:col-end-13 overflow-visible'>\n        <AddToDo/>\n      </div>\n      \n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}